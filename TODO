
privileges
	introduce build-admin
		Some operations should require build-admin

	Workflows
		prep: as user, sudo to run containers
		build: user user.
			optionally check out source

building without sudo

build strategies
	move env setting into their respective classes
		(such as PIP_INDEX_URL)
	move proxy env setting into the build command loop

dependencies on non-ruby packages (esp rpms)
	when compiling an extension, run ldd on the .so to detect
	its runtime deps.

	Add rpm requirements to spec.requirements?

Gemfile parser:
	gem 'byebug', platform: (RUBY_VERSION > "2.0.0" ? :mri : :mswin)

	from rspec/Gemfile:
	%w[rspec-core rspec-expectations rspec-mocks rspec-support].each do |lib|
	  gem lib, :path => File.expand_path("../../#{lib}", __FILE__)
	end

	from rspec 2.11.0
	source :rubygems

change ruby from proxy to mirror?
	provide a per-build instance that can hide/add packages

prep:
	after building, check the implicit dependencies (eg from
	Gemfile.lock) and make sure we can resolve them vs our own index

build-spec extensions:
	git-tag-pattern v%version or v%subst(.,_,%version)

support mirrored git repos

bundler:
 -	make the bundler command configurable

local compute
 -	add interactive_shell

add python-requires info to simple index

restricted network

Support maven/java
